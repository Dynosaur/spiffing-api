import { Transform, Readable } from 'stream';
import { createReadStream } from 'fs';

export class DeveloperActions {

    private autogenMessage = '// This file is autogenerated; changes may be overwritten.\n\n';

    public streamFile(path: string): Readable {
        const stream = new Transform({ transform: function(chunk, buffer, next) {
            this.push(chunk);
            next();
        }});
        stream.write(this.autogenMessage);
        createReadStream(path).pipe(stream);
        return stream;
    }

    public streamDataTypes(): Readable {
        return this.streamFile('src/server/interface/data-types.ts');
    }

    public streamEndpoints(): Readable {
        return this.streamFile('src/server/interface/endpoints.ts');
    }

    public streamResponse(): Readable {
        return this.streamFile('src/server/interface/response.ts');
    }

    streamResponsesApi(): Readable {
        return this.streamFile('src/server/interface/responses/api-responses.ts');
    }

    streamResponsesAuth(): Readable {
        return this.streamFile('src/server/interface/responses/auth-endpoints.ts');
    }

    streamResponsesError(): Readable {
        return this.streamFile('src/server/interface/responses/error-responses.ts');
    }

}
